<?xml version="1.0" encoding="UTF-8"?>

<!--
  =======================================================================
    Application build file
  =======================================================================
-->
<project name="Program Extension Synthesis" default="build" basedir=".">
	<!-- Set global properties for this build -->
	<property name="src" value="src" />
	<property name="lib" value="lib" />
	<property name="tools" value="tools" />
	<property name="build" value="bin" />
	<property name="javadocs" value="javadocs" />

	<!--
       ===================================================================
         Sets up internal values
       ===================================================================
  -->
	<target name="init" description="-> sets up internal values">
		<!-- Create the directory for classes and other resources -->
		<mkdir dir="${build}" />
	</target>

	<!--
	       ===================================================================
	         Generates the Jminor parser
	       ===================================================================
	  -->
	<target name="jminor parser" depends="jminor scanner" description="-> generates the jminor parser">
		<delete file="${src}/jminor/ast/Parser.java" />
		<delete file="${src}/jminor/ast/sym.java" />

		<java classname="java_cup.Main" classpath="${lib}/java_cup.jar">
			<arg value="-parser" />
			<arg value="JminorParser" />
			<arg value="-package" />
			<arg value="jminor.ast" />
			<arg value="-symbols" />
			<arg value="JminorSym" />
			<arg value="${src}/jminor/ast/jminor.cup" />
		</java>

		<move file="JminorParser.java" tofile="${src}/jminor/ast/JminorParser.java" />
		<move file="JminorSym.java" tofile="${src}/jminor/ast/JminorSym.java" />

		<replace file="${src}/jminor/ast/JminorParser.java" value='@SuppressWarnings({"rawtypes", "unused", "unchecked"}) class CUP$JminorParser$actions'>
			<replacetoken>class CUP$JminorParser$actions</replacetoken>
		</replace>
		<replace file="${src}/jminor/ast/JminorParser.java" value='@SuppressWarnings({"rawtypes", "unused"}) public class JminorParser'>
			<replacetoken>public class JminorParser</replacetoken>
		</replace>

	</target>

	<!--
	       ===================================================================
	         Generates the Jminor scanner
	       ===================================================================
	  -->
	<target name="jminor scanner" depends="init" description="-> generates the jminor scanner">
		<delete file="${src}/jminor/ast/JminorLexer.java" />

		<java classname="jflex.Main" classpath="${lib}/jflex-1.6.1.jar">
			<arg value="${src}/jminor/ast/jminor.lex" />
		</java>

		<replace file="${src}/jminor/ast/JminorLexer.java" value='@SuppressWarnings(value={"all"}) public class JminorLexer'>
			<replacetoken>public class JminorLexer</replacetoken>
		</replace>
	</target>

	<!--
       ===================================================================
         Compiles the sources
       ===================================================================
  -->
	<target name="classes" depends="init" description="-> compiles the source code to create the tree of classes">
		<!-- Copy resource files -->
		<copy todir="${build}">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>

		<!-- Compile the java code from ${src} into ${classes} -->
		<echo message="Compiling sources..." />
		<javac srcdir="${src}" destdir="${build}" source="1.9" classpath="${lib}/java_cup.jar; ${lib}/Util.jar" includeantruntime="false" />
	</target>

	<!--
       ===================================================================
         Create javadocs
       ===================================================================
  -->
	<target name="javadocs" depends="init" description="-> creates javadocs">
		<javadoc packagenames="gp.*, jminor.*" sourcepath="src" classpath="${lib}/java_cup.jar; ${lib}/ST-4.0.8.jar; ${lib}/smtinterpol-2.1-335-g4c543a5.jar; ${lib}/commons-configuration2-2.0.jar; 
			${lib}/commons-exec-1.3.jar; ${lib}/trove-3.0.3.jar; ${lib}/Util.jar" defaultexcludes="yes" destdir="${javadocs}" author="true" version="true" use="true" windowtitle="Program Extension Synthesizer">
		</javadoc>
	</target>

	<!--
       ===================================================================
         Cleans and the builds
       ===================================================================
  -->
	<target name="rebuild" depends="clean, build" description="-> first cleans and then build everything">
	</target>

	<!--
       ===================================================================
         Builds everything
       ===================================================================
  -->
	<target name="build" depends="init, classes" description="-> generates the scanner and parser and compiles all classes">
	</target>

	<!--
       ===================================================================
         Packs classes into a jar file
       ===================================================================
  -->
	<target name="jar" depends="build" description="-> packs all classes into a jar file">
		<tstamp>
			<format property="TODAY" pattern="d-MMMM-yyyy" locale="en,GB" />
		</tstamp>

		<!-- Create a manifest for the jar file -->
		<manifest file="MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}" />
			<attribute name="Main-Class" value="jminor.Main" />
			<attribute name="Class-Path" value="${lib}/jflex-1.6.1.jar ${lib}/java_cup.jar ${lib}/java-cup-11b-runtime.jar ${lib}/commons-configuration2-2.0.jar ${lib}/commons-logging-1.2.jar ${lib}/commons-beanutils-1.9.2.jar ${lib}/commons-lang3-3.4.jar ${lib}/ST-4.0.8.jar ${lib}/trove-3.0.3.jar ${lib}/Util.jar" />
			<section name="PexSyn">
				<attribute name="Implementation-Version" value="${TODAY}" />
			</section>
		</manifest>

		<jar destfile="pexyn.jar" basedir="${build}" manifest="MANIFEST.MF" />
	</target>

	<!--
       ===================================================================
         Deletes the build directory tree
       ===================================================================
  -->
	<target name="clean" description="-> cleans up build and dist directories">
		<delete dir="${build}" />
		<delete dir="${javadocs}" />
		<delete file="pexyn.jar" />
		<delete file="MANIFEST.MF" />
	</target>
</project>
